plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "8.10"
    id 'idea'
}

group = 'org.kif'
version = '1.2.3'

def javaVersion = JavaVersion.VERSION_21
def encoding = 'UTF-8'
def paperVersion = '1.21.4-R0.1-SNAPSHOT'
def mcVersion = '1.21.4'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    mavenLocal()
    maven {
        name = "papermc"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven { 
        url 'https://jitpack.io' 
    }
    maven {
        name = "CodeMC"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }
    maven {
        url "https://maven.pkg.github.com/KillionRevival/KillionCommons"
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        url "https://repo.nightexpressdev.com/releases"
        name = "nightexpress-releases"
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:${paperVersion}"
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    implementation "co.killionrevival:killioncommons:3.3.1-SNAPSHOT"
    implementation "co.killionrevival:curiosities:1.1.1"
    implementation "com.flyerzrule.mc.customtags:customtags:1.4.2"
    implementation "net.luckperms:api:5.4"
    implementation "com.github.drtshock:PlayerVaults:4.2.15"
    implementation "com.github.Gypopo:EconomyShopGUI-API:1.7.3"
    implementation "com.acrobot.chestshop:chestshop:3.12.2"
    implementation "com.sk89q.worldguard:worldguard-bukkit:7.0.7"
    implementation "moe.krp:SimpleRegions:1.3.10"
    implementation "net.kyori:adventure-api:4.11.0"

    implementation ("com.github.MilkBowl:VaultAPI:1.7.1") {
        exclude group: 'org.bukkit', module: 'bukkit'
    }
}

configurations.configureEach {
    exclude group: 'org.incendo.cloud', module: '*'
}

java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    withJavadocJar()
    withSourcesJar()
}

tasks.withType(Zip) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Tar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(JavaCompile) {
    options.encoding = encoding
}

tasks.processResources {
    filesMatching('plugin.yml') {
        expand (version: project.version, mcVersion: mcVersion)
    }
}

tasks.assemble {
    dependsOn(tasks.shadowJar)
}

tasks.build {
    dependsOn(tasks.shadowJar)
}

tasks.sourcesJar {
    from sourceSets.main.delombokTask
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId 'Reincarceration'
        }
    }
    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri('https://maven.pkg.github.com/KillionRevival/Reincarceration')
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv('GITHUB_ACTOR')
                password = project.findProperty("gpr.key") ?: System.getenv('GITHUB_TOKEN')
            }
        }
    }
}